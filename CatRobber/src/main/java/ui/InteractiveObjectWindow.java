package ui;

import javafx.geometry.Pos;
import javafx.scene.Node;
import javafx.scene.effect.DropShadow;
import javafx.scene.input.KeyEvent;
import javafx.scene.layout.*;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.geometry.Insets;
import javafx.scene.paint.Color;
import javafx.scene.paint.LinearGradient;
import javafx.scene.paint.Stop;
import javafx.scene.text.TextAlignment;
import javafx.scene.shape.Rectangle;
import javafx.scene.control.TextField;
import managers.FontManager;
import managers.GameManager;
import managers.SoundManager;
import managers.UIManager;
import org.json.JSONObject;
import utils.GameLoader;

import java.util.Random;

/**
 * –ö–ª–∞—Å, —è–∫–∏–π –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—î –≤—ñ–∫–Ω–æ –∑ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∏–º –æ–±'—î–∫—Ç–æ–º —É –≥—Ä—ñ.
 * –í—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è UI, –æ–±—Ä–æ–±–∫—É –ø–æ–¥—ñ–π —Ç–∞ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—é –≤–º—ñ—Å—Ç–æ–º.
 */
public class InteractiveObjectWindow {
    private JSONObject config; //–æ–±‚Äô—î–∫—Ç –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó —É —Ñ–æ—Ä–º–∞—Ç—ñ JSON, —â–æ –º—ñ—Å—Ç–∏—Ç—å –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –≤—ñ–∫–Ω–∞ –∞–±–æ –±—Ä–∞—É–∑–µ—Ä–∞
    private Pane root; //–∫–æ—Ä–µ–Ω–µ–≤–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Ü—å–æ–≥–æ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
    private UIManager.WindowType windowType; //—Ç–∏–ø –≤—ñ–∫–Ω–∞, —â–æ –≤–∏–∑–Ω–∞—á–∞—î—Ç—å—Å—è —á–µ—Ä–µ–∑ UIManager.WindowType (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, TERMINAL, COMPUTER —Ç–æ—â–æ)

    // –ó–º—ñ–Ω–Ω—ñ –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–∞
    private int currentPage = 0; //–ø–æ—Ç–æ—á–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞, —è–∫–∞ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î—Ç—å—Å—è –≤ –±—Ä–∞—É–∑–µ—Ä—ñ
    private final int totalPages = 2; //–∑–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Å—Ç–æ—Ä—ñ–Ω–æ–∫ —É –±—Ä–∞—É–∑–µ—Ä—ñ
    private Pane browserContentArea; //–æ–±–ª–∞—Å—Ç—å, —É —è–∫—ñ–π –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î—Ç—å—Å—è –≤–º—ñ—Å—Ç –ø–æ—Ç–æ—á–Ω–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –±—Ä–∞—É–∑–µ—Ä–∞
    private Label pageIndicator; //–ø–æ–∑–Ω–∞—á–∫–∞ —ñ–Ω–¥–∏–∫–∞—Ü—ñ—ó –Ω–æ–º–µ—Ä–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∏ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, "1 –∑ 2")
    private Button prevButton; //–∫–Ω–æ–ø–∫–∞ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥—É –Ω–∞ –ø–æ–ø–µ—Ä–µ–¥–Ω—é —Å—Ç–æ—Ä—ñ–Ω–∫—É
    private Button nextButton; //–∫–Ω–æ–ø–∫–∞ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥—É –Ω–∞ –Ω–∞—Å—Ç—É–ø–Ω—É —Å—Ç–æ—Ä—ñ–Ω–∫—É
    private String vaultCode; //–∫–æ–¥ —Å–µ–π—Ñ—É, —è–∫–∏–π –º–æ–∂–µ –±—É—Ç–∏ –∑—á–∏—Ç–∞–Ω–∏–π –∞–±–æ –≤–≤–µ–¥–µ–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º
    private GameLoader gameLoader; //–∑–∞–≤–∞–Ω—Ç–∞–∂—É–≤–∞—á —Ä–µ—Å—É—Ä—Å—ñ–≤
    private final SoundManager soundManager = SoundManager.getInstance(); //–º–µ–Ω–µ–¥–∂–µ—Ä –∑–≤—É–∫—ñ–≤, —â–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞ –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞—É–¥—ñ–æ-–µ—Ñ–µ–∫—Ç—ñ–≤

    /**
     * –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Å—Ç–≤–æ—Ä—é—î –≤—ñ–∫–Ω–æ –∑–∞–¥–∞–Ω–æ–≥–æ —Ç–∏–ø—É –∑ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è–º–∏ –∑ JSON-–∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó
     * @param windowType —Ç–∏–ø –≤—ñ–∫–Ω–∞
     * @param config –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è —É —Ñ–æ—Ä–º–∞—Ç—ñ JSON
     */
    public InteractiveObjectWindow(UIManager.WindowType windowType, JSONObject config) {
        this.config = config;
        this.windowType = windowType;
        this.vaultCode = GameManager.getInstance().getCode();
        this.root = new Pane();
        this.gameLoader = new GameLoader();
        initializeUI(config);
    }

    /**
     * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î –≥—Ä–∞—Ñ—ñ—á–Ω–∏–π —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≤—ñ–∫–Ω–∞ –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —Ç–∏–ø—É –≤—ñ–∫–Ω–∞ —Ç–∞ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó
     * @param config JSON-–æ–±'—î–∫—Ç –∑ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è–º–∏ –¥–ª—è –≤—ñ–∫–Ω–∞
     */
    private void initializeUI(JSONObject config) {
        if (windowType == UIManager.WindowType.COMPUTER) {
            root.setPrefSize(800, 600);
            root.setMinSize(800, 600);
            root.setMaxSize(800, 600);
        } else if (windowType == UIManager.WindowType.VICTORY || windowType == UIManager.WindowType.GAME_OVER) {
            // –ó–±—ñ–ª—å—à—É—î–º–æ —Ä–æ–∑–º—ñ—Ä –¥–ª—è –≤—ñ–∫–æ–Ω –∫—ñ–Ω—Ü—è –≥—Ä–∏
            root.setPrefSize(450, 400);
            root.setMinSize(450, 400);
            root.setMaxSize(450, 400);
        } else {
            root.setPrefSize(400, 300);
            root.setMinSize(400, 300);
            root.setMaxSize(400, 300);
        }

        root.setMouseTransparent(false);
        root.setFocusTraversable(true);
        root.setPickOnBounds(true);
        root.setDisable(false);

        // –§–æ–Ω –∑–∞–ª–µ–∂–∏—Ç—å –≤—ñ–¥ —Ç–∏–ø—É –≤—ñ–∫–Ω–∞
        if (windowType == UIManager.WindowType.COMPUTER) {
            root.setBackground(new Background(new BackgroundFill(
                    Color.rgb(20, 25, 35), CornerRadii.EMPTY, Insets.EMPTY)));
        } else {
            root.setBackground(new Background(new BackgroundFill(
                    Color.rgb(0, 0, 0, 0.8), CornerRadii.EMPTY, Insets.EMPTY)));
        }

        root.setOnMouseClicked(e -> {
            root.requestFocus();
            e.consume();
        });

        createWindowContent();

        javafx.application.Platform.runLater(() -> {
            root.requestFocus();
        });

        root.setOnKeyPressed(this::handleKeyPress);
    }

    /**
     * –û–±—Ä–æ–±–ª—è—î –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–ª–∞–≤—ñ—à —É –≤—ñ–∫–Ω—ñ
     * @param event –ø–æ–¥—ñ—è –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–ª–∞–≤—ñ—à—ñ
     */
    private void handleKeyPress(KeyEvent event) {
        if (windowType == UIManager.WindowType.COMPUTER) {
            switch (event.getCode()) {
                case LEFT:
                    navigatePage(-1);
                    event.consume();
                    break;
                case RIGHT:
                    navigatePage(1);
                    event.consume();
                    break;
                case ESCAPE:
                    closeWindow();
                    event.consume();
                    break;
            }
        } else if (event.getCode() == javafx.scene.input.KeyCode.ESCAPE) {
            closeWindow();
            event.consume();
        }
    }

    /**
     * –°—Ç–≤–æ—Ä—é—î –≤–º—ñ—Å—Ç –≤—ñ–∫–Ω–∞ –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –π–æ–≥–æ —Ç–∏–ø—É
     * –í–∏–∫–ª–∏–∫–∞—î –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏–π –º–µ—Ç–æ–¥ –¥–ª—è —Ñ–æ—Ä–º—É–≤–∞–Ω–Ω—è –∫–æ–Ω—Ç–µ–Ω—Ç—É:
     * - –¥–ª—è NOTE —ñ PICTURE ‚Äî —Å—Ç–≤–æ—Ä—é—î –Ω–æ—Ç–∞—Ç–∫–∏ –∞–±–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è,
     * - –¥–ª—è COMPUTER ‚Äî —Å—Ç–≤–æ—Ä—é—î —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∫–æ–º–ø‚Äô—é—Ç–µ—Ä–∞,
     * - –¥–ª—è VICTORY —ñ GAME_OVER ‚Äî —Å—Ç–≤–æ—Ä—é—î –≤–º—ñ—Å—Ç –∫—ñ–Ω—Ü—è –≥—Ä–∏.
     */
    private void createWindowContent() {
        switch (windowType) {
            case NOTE:
            case PICTURE:
                createNoteContent();
                break;
            case COMPUTER:
                createComputerContent();
                break;
            case VICTORY:
            case GAME_OVER:
                createEndGameContent();
                break;
        }
    }

    /**
     * –°—Ç–≤–æ—Ä—é—î —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≤–º—ñ—Å—Ç—É –≤—ñ–∫–Ω–∞ —Ç–∏–ø—É COMPUTER
     * –î–æ–¥–∞—î –ø–∞–Ω–µ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ –∑ –∫–Ω–æ–ø–∫–∞–º–∏ –∫–µ—Ä—É–≤–∞–Ω–Ω—è, –∞–¥—Ä–µ—Å–Ω–∏–π —Ä—è–¥–æ–∫,
     * –æ–±–ª–∞—Å—Ç—å –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–æ–Ω—Ç–µ–Ω—Ç—É, –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó, —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å—Ç–æ—Ä—ñ–Ω–∫–∏ —Ç–∞ –∫–Ω–æ–ø–∫—É –∑–∞–∫—Ä–∏—Ç—Ç—è –≤—ñ–∫–Ω–∞.
     */
    private void createComputerContent() {
        // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –±—Ä–∞—É–∑–µ—Ä–∞
        Pane browserBar = new Pane();
        browserBar.setBackground(new Background(new BackgroundFill(
                Color.rgb(60, 70, 80), new CornerRadii(5, 5, 0, 0, false), Insets.EMPTY)));
        browserBar.setPrefSize(760, 40);
        browserBar.setLayoutX(20);
        browserBar.setLayoutY(20);

        // –ö–Ω–æ–ø–∫–∏ –±—Ä–∞—É–∑–µ—Ä–∞
        addBrowserButton(browserBar, 10, 10, Color.rgb(255, 95, 86)); // –ß–µ—Ä–≤–æ–Ω–∞
        addBrowserButton(browserBar, 35, 10, Color.rgb(255, 189, 46)); // –ñ–æ–≤—Ç–∞
        addBrowserButton(browserBar, 60, 10, Color.rgb(39, 201, 63)); // –ó–µ–ª–µ–Ω–∞

        // –ê–¥—Ä–µ—Å–Ω–∏–π —Ä—è–¥–æ–∫
        Label addressBar = new Label("üêæ CatBank Browser - –ü—Ä–∏–≤–∞—Ç–Ω–∏–π —Ä–µ–∂–∏–º");
        addressBar.setFont(FontManager.getInstance().getFont("Hardpixel", 14));
        addressBar.setTextFill(Color.WHITE);
        addressBar.setLayoutX(100);
        addressBar.setLayoutY(12);
        browserBar.getChildren().add(addressBar);

        root.getChildren().add(browserBar);

        // –û–±–ª–∞—Å—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç—É –±—Ä–∞—É–∑–µ—Ä–∞
        browserContentArea = new Pane();
        browserContentArea.setBackground(new Background(new BackgroundFill(
                Color.rgb(40, 45, 55), new CornerRadii(0, 0, 5, 5, false), Insets.EMPTY)));
        browserContentArea.setPrefSize(760, 500);
        browserContentArea.setLayoutX(20);
        browserContentArea.setLayoutY(60);

        root.getChildren().add(browserContentArea);

        // –ù–∞–≤—ñ–≥–∞—Ü—ñ–π–Ω—ñ –∫–Ω–æ–ø–∫–∏
        createNavigationButtons();

        // –Ü–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å—Ç–æ—Ä—ñ–Ω–∫–∏
        pageIndicator = new Label();
        pageIndicator.setFont(FontManager.getInstance().getFont("Hardpixel", 14));
        pageIndicator.setTextFill(Color.LIGHTGRAY);
        pageIndicator.setLayoutX(370);
        pageIndicator.setLayoutY(570);
        root.getChildren().add(pageIndicator);

        // –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä–∏—Ç—Ç—è
        createComputerCloseButton();

        // –û–Ω–æ–≤–ª—é—î–º–æ –∫–æ–Ω—Ç–µ–Ω—Ç –ø–µ—Ä—à–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏
        updateBrowserPage();
    }

    /**
     * –î–æ–¥–∞—î –∫–æ–ª—å–æ—Ä–æ–≤—É –∫–Ω–æ–ø–∫—É –¥–æ –ø–∞–Ω–µ–ª—ñ –±—Ä–∞—É–∑–µ—Ä–∞
     * @param parent –ü–∞–Ω–µ–ª—å, –¥–æ —è–∫–æ—ó –¥–æ–¥–∞—î—Ç—å—Å—è –∫–Ω–æ–ø–∫–∞
     * @param x –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∞ –ø–æ–∑–∏—Ü—ñ—è –∫–Ω–æ–ø–∫–∏ –≤ –ø–∞–Ω–µ–ª—ñ
     * @param y –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–∞ –ø–æ–∑–∏—Ü—ñ—è –∫–Ω–æ–ø–∫–∏ –≤ –ø–∞–Ω–µ–ª—ñ
     * @param color –ö–æ–ª—ñ—Ä –∫–Ω–æ–ø–∫–∏.
     */
    private void addBrowserButton(Pane parent, double x, double y, Color color) {
        Pane button = new Pane();
        button.setBackground(new Background(new BackgroundFill(
                color, new CornerRadii(10), Insets.EMPTY)));
        button.setPrefSize(20, 20);
        button.setLayoutX(x);
        button.setLayoutY(y);
        parent.getChildren().add(button);
    }

    /**
     * –°—Ç–≤–æ—Ä—é—î –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó "–ù–∞–∑–∞–¥" —ñ "–í–ø–µ—Ä–µ–¥" –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–∞
     * –ö–Ω–æ–ø–∫–∏ —Ä–æ–∑—Ç–∞—à–æ–≤—É—é—Ç—å—Å—è –≤–Ω–∏–∑—É –≤—ñ–∫–Ω–∞, –º–∞—é—Ç—å —Å—Ç–∏–ª—å —ñ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥—É –º—ñ–∂ —Å—Ç–æ—Ä—ñ–Ω–∫–∞–º–∏
     * –ü—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–Ω—ñ –∫–Ω–æ–ø–∫–∏ –∑–º—ñ–Ω—é—é—Ç—å –∫–æ–ª—ñ—Ä, –∞ –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ –≤—ñ–¥—Ç–≤–æ—Ä—é—é—Ç—å –∑–≤—É–∫ —ñ –≤–∏–∫–ª–∏–∫–∞—é—Ç—å –Ω–∞–≤—ñ–≥–∞—Ü—ñ—é
     */
    private void createNavigationButtons() {
        prevButton = new Button("‚óÄ –ù–∞–∑–∞–¥");
        prevButton.setFont(FontManager.getInstance().getFont("Hardpixel", 14));
        prevButton.setStyle("-fx-background-color: #4a5568; -fx-text-fill: white; -fx-border-radius: 5; -fx-background-radius: 5;");
        prevButton.setLayoutX(600);
        prevButton.setLayoutY(570);
        prevButton.setPrefSize(80, 25);

        prevButton.setOnAction(e -> {
            soundManager.playSound(SoundManager.SoundType.KEYBOARD_TYPING);
            navigatePage(-1);
        });
        prevButton.setOnMouseEntered(e -> {
                prevButton.setStyle("-fx-background-color: #5a6578; -fx-text-fill: white; -fx-border-radius: 5; -fx-background-radius: 5;");});

        prevButton.setOnMouseExited(e -> {
                prevButton.setStyle("-fx-background-color: #4a5568; -fx-text-fill: white; -fx-border-radius: 5; -fx-background-radius: 5;");});

        nextButton = new Button("–í–ø–µ—Ä–µ–¥ ‚ñ∂");
        nextButton.setFont(FontManager.getInstance().getFont("Hardpixel", 14));
        nextButton.setStyle("-fx-background-color: #4a5568; -fx-text-fill: white; -fx-border-radius: 5; -fx-background-radius: 5;");
        nextButton.setLayoutX(690);
        nextButton.setLayoutY(570);
        nextButton.setPrefSize(80, 25);

        nextButton.setOnAction(e -> {
            soundManager.playSound(SoundManager.SoundType.KEYBOARD_TYPING);
            navigatePage(1);
        });
        nextButton.setOnMouseEntered(e -> {
                nextButton.setStyle("-fx-background-color: #5a6578; -fx-text-fill: white; -fx-border-radius: 5; -fx-background-radius: 5;");});
        nextButton.setOnMouseExited(e -> {
                nextButton.setStyle("-fx-background-color: #4a5568; -fx-text-fill: white; -fx-border-radius: 5; -fx-background-radius: 5;");});

        root.getChildren().addAll(prevButton, nextButton);
    }

    /**
     * –°—Ç–≤–æ—Ä—é—î –∫–Ω–æ–ø–∫—É –∑–∞–∫—Ä–∏—Ç—Ç—è –≤—ñ–∫–Ω–∞ –∫–æ–º–ø'—é—Ç–µ—Ä–∞
     */
    private void createComputerCloseButton() {
        Button closeButton = new Button("‚úñ");
        closeButton.setFont(FontManager.getInstance().getFont("Hardpixel", 18));
        closeButton.setStyle("-fx-background-color: #ff4444; -fx-text-fill: white; -fx-border-radius: 3; -fx-background-radius: 3;");
        closeButton.setLayoutX(750);
        closeButton.setLayoutY(10);
        closeButton.setPrefSize(30, 30);

        closeButton.setOnAction(e -> {
            soundManager.playSound(SoundManager.SoundType.KEYBOARD_TYPING);
            closeWindow();
        });
        closeButton.setOnMouseEntered(e -> {
                closeButton.setStyle("-fx-background-color: #ff6666; -fx-text-fill: white; -fx-border-radius: 3; -fx-background-radius: 3;");});
        closeButton.setOnMouseExited(e -> {
                soundManager.playSound(SoundManager.SoundType.KEYBOARD_TYPING);
                closeButton.setStyle("-fx-background-color: #ff4444; -fx-text-fill: white; -fx-border-radius: 3; -fx-background-radius: 3;");});

        root.getChildren().add(closeButton);
    }

    /**
     * –ó–º—ñ–Ω—é—î –ø–æ—Ç–æ—á–Ω—É —Å—Ç–æ—Ä—ñ–Ω–∫—É –±—Ä–∞—É–∑–µ—Ä–∞ –Ω–∞ –æ—Å–Ω–æ–≤—ñ –Ω–∞–ø—Ä—è–º–∫—É –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó
     * @param direction –ù–∞–ø—Ä—è–º–æ–∫ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó: -1 –¥–ª—è –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏, +1 –¥–ª—è –Ω–∞—Å—Ç—É–ø–Ω–æ—ó
     */
    private void navigatePage(int direction) {
        int newPage = currentPage + direction;
        if (newPage >= 0 && newPage < totalPages) {
            currentPage = newPage;
            updateBrowserPage();
        }
    }

    /**
     * –û–Ω–æ–≤–ª—é—î –∫–æ–Ω—Ç–µ–Ω—Ç –±—Ä–∞—É–∑–µ—Ä–∞ –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –ø–æ—Ç–æ—á–Ω–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏, –æ–Ω–æ–≤–ª—é—î —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å—Ç–æ—Ä—ñ–Ω–∫–∏ —Ç–∞ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å –∫–Ω–æ–ø–æ–∫ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó
     * –í—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞ –≤—ñ–∑—É–∞–ª—å–Ω–µ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–æ–∫ —ñ –∫–µ—Ä—É–≤–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∞–º–∏ "–ù–∞–∑–∞–¥" —Ç–∞ "–í–ø–µ—Ä–µ–¥"
     */
    private void updateBrowserPage() {
        browserContentArea.getChildren().clear();

        switch (currentPage) {
            case 0:
                createGoogleSearchPage();
                break;
            case 1:
                createVaultCodePage();
                break;

        }

        // –û–Ω–æ–≤–ª—é—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å—Ç–æ—Ä—ñ–Ω–∫–∏
        pageIndicator.setText((currentPage + 1) + " / " + totalPages);

        // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –∫–Ω–æ–ø–æ–∫
        prevButton.setDisable(currentPage == 0);
        nextButton.setDisable(currentPage == totalPages - 1);

        if (prevButton.isDisabled()) {
            prevButton.setStyle("-fx-background-color: #2d3748; -fx-text-fill: #666; -fx-border-radius: 5; -fx-background-radius: 5;");
        }
        if (nextButton.isDisabled()) {
            nextButton.setStyle("-fx-background-color: #2d3748; -fx-text-fill: #666; -fx-border-radius: 5; -fx-background-radius: 5;");
        }
    }

    /**
     * –°—Ç–≤–æ—Ä—é—î –∫–æ–Ω—Ç–µ–Ω—Ç —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –∑ —ñ–º—ñ—Ç–∞—Ü—ñ—î—é –ø–æ—à—É–∫–æ–≤–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏ Google
     * –ï–ª–µ–º–µ–Ω—Ç–∏ –¥–æ–¥–∞—é—Ç—å—Å—è —É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä browserContentArea
     */
    private void createGoogleSearchPage() {
        // –ë—ñ–ª–∏–π —Ñ–æ–Ω Google
        Rectangle background = new Rectangle(760, 500);
        background.setFill(Color.WHITE);
        browserContentArea.getChildren().add(background);

        // –õ–æ–≥–æ—Ç–∏–ø Google (—Å—Ç–∏–ª—ñ–∑–æ–≤–∞–Ω–∏–π)
        Label googleLogo = new Label("üîç Google");
        googleLogo.setFont(FontManager.getInstance().getFont("Hardpixel", 34));
        googleLogo.setStyle("-fx-font-weight: bold;");
        googleLogo.setTextFill(Color.rgb(66, 133, 244));
        googleLogo.setLayoutX(320);
        googleLogo.setLayoutY(30);
        browserContentArea.getChildren().add(googleLogo);

        // –ü–æ—à—É–∫–æ–≤–µ –ø–æ–ª–µ
        TextField searchField = new TextField();
        searchField.setFont(FontManager.getInstance().getFont("Hardpixel", 16));
        searchField.setStyle("-fx-background-color: white; -fx-border-color: #dadce0; -fx-border-width: 1; -fx-border-radius: 24; -fx-background-radius: 24;");
        searchField.setPrefSize(400, 40);
        searchField.setLayoutX(180);
        searchField.setLayoutY(90);
        browserContentArea.getChildren().add(searchField);

        // –ó–∞–≥–æ–ª–æ–≤–æ–∫ —ñ—Å—Ç–æ—Ä—ñ—ó
        Label historyTitle = new Label("–Ü—Å—Ç–æ—Ä—ñ—è –ø–æ—à—É–∫—É:");
        historyTitle.setFont(FontManager.getInstance().getFont("Hardpixel", 18));
        historyTitle.setStyle("-fx-font-weight: bold;");
        historyTitle.setTextFill(Color.rgb(51, 51, 51));
        historyTitle.setLayoutX(50);
        historyTitle.setLayoutY(160);
        browserContentArea.getChildren().add(historyTitle);

        // –Ü—Å—Ç–æ—Ä—ñ—è –ø–æ—à—É–∫—É
        String[] searchHistory = {
                "üîç –Ø–∫ –ø—Ä–∏–±—Ä–∞—Ç–∏ —à–µ—Ä—Å—Ç—å –∑ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏",
                "üîç –ß–∏ –º–æ–∂–Ω–∞ –∫—É–ø–∏—Ç–∏ –≤–∞–ª–µ—Ä'—è–Ω–∫—É –æ–ø—Ç–æ–º",
                "üîç –Ø–∫ –∑–ª–∞–º–∞—Ç–∏ –≤–ª–∞—Å–Ω–∏–π —Å–µ–π—Ñ, —è–∫—â–æ –∑–∞–±—É–≤ –∫–æ–¥",
                "üîç –ß–æ–º—É –≥–æ—Å–ø–æ–¥–∞—Ä –∫–∞–∂–µ —â–æ –≤ –º–∏—Å—Ü—ñ —î –∫–æ—Ä–º –∫–æ–ª–∏ —è –±–∞—á—É –¥–Ω–æ"
        };

        for (int i = 0; i < searchHistory.length; i++) {
            Rectangle searchItem = new Rectangle(650, 35);
            searchItem.setFill(Color.rgb(248, 249, 250));
            searchItem.setLayoutX(50);
            searchItem.setLayoutY(190 + (i * 45));

            if (i % 2 == 0) {
                searchItem.setOnMouseEntered(e -> searchItem.setFill(Color.rgb(241, 243, 244)));
                searchItem.setOnMouseExited(e -> searchItem.setFill(Color.rgb(248, 249, 250)));
            }

            browserContentArea.getChildren().add(searchItem);

            Label searchText = new Label(searchHistory[i]);
            searchText.setFont(FontManager.getInstance().getFont("Hardpixel", 16));
            searchText.setTextFill(Color.rgb(26, 13, 171));
            searchText.setLayoutX(60);
            searchText.setLayoutY(197 + (i * 45));

            final int index = i;
            searchText.setOnMouseEntered(e -> searchText.setStyle("-fx-underline: true;"));
            searchText.setOnMouseExited(e -> searchText.setStyle("-fx-underline: false;"));

            browserContentArea.getChildren().add(searchText);
        }
    }

    /**
     * –°—Ç–≤–æ—Ä—é—î —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å—Ç–æ—Ä—ñ–Ω–∫–∏ "Vault Code" ‚Äî –±–∞–Ω–∫—ñ–≤—Å—å–∫–æ—ó —Å–∏—Å—Ç–µ–º–∏ –±–µ–∑–ø–µ–∫–∏
     * –í—Å—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –¥–æ–¥–∞—é—Ç—å—Å—è –¥–æ browserContentArea
     * –ö–æ–¥ —Å—Ö–æ–≤–∏—â–∞ —Ç–∞–∫–æ–∂ –∑–±–µ—Ä—ñ–≥–∞—î—Ç—å—Å—è –≤ GameManager –¥–ª—è –ø–æ–¥–∞–ª—å—à–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è
     */
    private void createVaultCodePage() {
        // –¢–µ–º–Ω–æ-—Å–∏–Ω—ñ–π —Ñ–æ–Ω –¥–ª—è –±–∞–Ω–∫—ñ–≤—Å—å–∫–æ—ó —Å–∏—Å—Ç–µ–º–∏
        Rectangle background = new Rectangle(760, 500);
        background.setFill(Color.rgb(0, 32, 64));
        browserContentArea.getChildren().add(background);

        // –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–∏—Å—Ç–µ–º–∏
        Label systemTitle = new Label("üèõÔ∏è CATBANK SECURITY SYSTEM üèõÔ∏è");
        systemTitle.setFont(FontManager.getInstance().getFont("Hardpixel", 22));
        systemTitle.setStyle("-fx-font-weight: bold;");
        systemTitle.setTextFill(Color.rgb(0, 255, 255));
        systemTitle.setLayoutX(180);
        systemTitle.setLayoutY(50);
        browserContentArea.getChildren().add(systemTitle);

        // –†–∞–º–∫–∞ –¥–ª—è —Å–µ–∫—Ä–µ—Ç–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó
        Rectangle codeFrame = new Rectangle(500, 200);
        codeFrame.setFill(Color.TRANSPARENT);
        codeFrame.setStroke(Color.rgb(0, 255, 255));
        codeFrame.setStrokeWidth(3);
        codeFrame.setArcWidth(15);
        codeFrame.setArcHeight(15);
        codeFrame.setLayoutX(130);
        codeFrame.setLayoutY(120);
        browserContentArea.getChildren().add(codeFrame);

        // –Ü–∫–æ–Ω–∫–∞ –±–µ–∑–ø–µ–∫–∏
        Label securityIcon = new Label("üîê");
        securityIcon.setFont(FontManager.getInstance().getFont("Hardpixel", 40));
        securityIcon.setLayoutX(150);
        securityIcon.setLayoutY(140);
        browserContentArea.getChildren().add(securityIcon);

        // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫–æ–¥—É
        Label codeTitle = new Label("–ö–û–î –í–Ü–î –ì–û–õ–û–í–ù–û–ì–û –°–•–û–í–ò–©–ê:");
        codeTitle.setFont(FontManager.getInstance().getFont("Hardpixel", 18));
        codeTitle.setStyle("-fx-font-weight: bold;");
        codeTitle.setTextFill(Color.rgb(255, 255, 0));
        codeTitle.setLayoutX(220);
        codeTitle.setLayoutY(150);
        browserContentArea.getChildren().add(codeTitle);

        // –ö–æ–¥ —Å—Ö–æ–≤–∏—â–∞ (–≤–µ–ª–∏–∫–µ —è—Å–∫—Ä–∞–≤–µ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è)
        Label vaultCodeDisplay = new Label(vaultCode);
        vaultCodeDisplay.setFont(FontManager.getInstance().getFont("Hardpixel", 48));
        vaultCodeDisplay.setStyle("-fx-font-weight: bold;");
        vaultCodeDisplay.setTextFill(Color.rgb(255, 255, 0));
        vaultCodeDisplay.setLayoutX(320);
        vaultCodeDisplay.setLayoutY(180);
        browserContentArea.getChildren().add(vaultCodeDisplay);

        // –†–æ–∑–¥—ñ–ª–æ–≤–∞ –ª—ñ–Ω—ñ—è
        Rectangle separator = new Rectangle(400, 2);
        separator.setFill(Color.rgb(0, 255, 255));
        separator.setLayoutX(180);
        separator.setLayoutY(260);
        browserContentArea.getChildren().add(separator);

        // –ü–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è
        Label warningLabel = new Label("‚ö†Ô∏è –£–í–ê–ì–ê: –ö–û–ù–§–Ü–î–ï–ù–¶–Ü–ô–ù–ê –Ü–ù–§–û–†–ú–ê–¶–Ü–Ø ‚ö†Ô∏è");
        warningLabel.setFont(FontManager.getInstance().getFont("Hardpixel", 16));
        warningLabel.setStyle("-fx-font-weight: bold;");
        warningLabel.setTextFill(Color.rgb(255, 69, 0));
        warningLabel.setLayoutX(200);
        warningLabel.setLayoutY(280);
        browserContentArea.getChildren().add(warningLabel);

        // –Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó
        Label instructions = new Label("–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ —Ü–µ–π –∫–æ–¥ –¥–ª—è –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è –≥–æ–ª–æ–≤–Ω–æ–≥–æ —Å—Ö–æ–≤–∏—â–∞ –±–∞–Ω–∫—É.\n–î–æ—Å—Ç—É–ø –¥–æ–∑–≤–æ–ª–µ–Ω–æ –ª–∏—à–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–æ–º—É –ø–µ—Ä—Å–æ–Ω–∞–ª—É.");
        instructions.setFont(FontManager.getInstance().getFont("Hardpixel", 14));
        instructions.setTextFill(Color.rgb(200, 200, 200));
        instructions.setLayoutX(180);
        instructions.setLayoutY(350);
        instructions.setWrapText(true);
        instructions.setPrefWidth(400);
        browserContentArea.getChildren().add(instructions);

        // –î–∞—Ç–∞ —Ç–∞ —á–∞—Å –¥–æ—Å—Ç—É–ø—É
        Label accessTime = new Label("–û—Å—Ç–∞–Ω–Ω—ñ–π –¥–æ—Å—Ç—É–ø: 15.06.2025 14:32:17");
        accessTime.setFont(FontManager.getInstance().getFont("Hardpixel", 12));
        accessTime.setTextFill(Color.GRAY);
        accessTime.setLayoutX(180);
        accessTime.setLayoutY(450); // Adjusted to avoid frame overlap
        browserContentArea.getChildren().add(accessTime);

        // ID —Å–µ—Å—ñ—ó
        Label sessionId = new Label("Session ID: CAT-" + new Random().nextInt(100000));
        sessionId.setFont(FontManager.getInstance().getFont("Hardpixel", 12));
        sessionId.setTextFill(Color.GRAY);
        sessionId.setLayoutX(180);
        sessionId.setLayoutY(470); // Adjusted to avoid frame overlap
        browserContentArea.getChildren().add(sessionId);

        // –°—Ç–∞—Ç—É—Å –±–µ–∑–ø–µ–∫–∏
        Rectangle statusBar = new Rectangle(200, 25);
        statusBar.setFill(Color.rgb(34, 139, 34));
        statusBar.setArcWidth(5);
        statusBar.setArcHeight(5);
        statusBar.setLayoutX(450);
        statusBar.setLayoutY(450); // Adjusted to avoid frame overlap
        browserContentArea.getChildren().add(statusBar);

        Label statusText = new Label("üîí SECURE CONNECTION");
        statusText.setFont(FontManager.getInstance().getFont("Hardpixel", 13));
        statusText.setStyle("-fx-font-weight: bold;");
        statusText.setTextFill(Color.WHITE);
        statusText.setLayoutX(460);
        statusText.setLayoutY(450); // Adjusted to avoid frame overlap
        browserContentArea.getChildren().add(statusText);

        // –ê–Ω—ñ–º–æ–≤–∞–Ω–∏–π —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ
        Label activityIndicator = new Label("‚óè");
        activityIndicator.setFont(FontManager.getInstance().getFont("Hardpixel", 20));
        activityIndicator.setTextFill(Color.rgb(0, 255, 0));
        activityIndicator.setLayoutX(600);
        activityIndicator.setLayoutY(130);
        browserContentArea.getChildren().add(activityIndicator);

        // –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∫–æ–¥—É –≤ GameManager –¥–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –≤ –≥—Ä—ñ
        GameManager.getInstance().setCode(vaultCode);
    }

    /**
     * –°—Ç–≤–æ—Ä—é—î –≤–º—ñ—Å—Ç –Ω–æ—Ç–∞—Ç–∫–∏ –∑ —Ñ–æ–Ω–æ–≤–∏–º –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è–º —ñ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è–º –∫–æ–¥—É —Å—Ö–æ–≤–∏—â–∞
     */
    private void createNoteContent() {
        // Set background image
        root.setBackground(new Background(new BackgroundImage(
                gameLoader.loadImage("UI/note.png"),
                BackgroundRepeat.NO_REPEAT,
                BackgroundRepeat.NO_REPEAT,
                BackgroundPosition.CENTER,
                new BackgroundSize(BackgroundSize.AUTO, BackgroundSize.AUTO, false, false, true, false)
        )));

        Label noteContent = new Label("–ö–æ–¥: " + vaultCode);
        noteContent.setFont(FontManager.getInstance().getFont("EpsilonCTT", 20));
        noteContent.setTextFill(Color.BLACK);
        noteContent.setTextAlignment(TextAlignment.CENTER);
        noteContent.setAlignment(Pos.CENTER);
        noteContent.setPrefWidth(400); // Full width of pane for horizontal centering
        noteContent.setWrapText(true);
        noteContent.setLayoutX(0);
        noteContent.setLayoutY(140); // Vertically centered below title
        root.getChildren().add(noteContent);

        createCloseButton();
    }

    /**
     * –°—Ç–≤–æ—Ä—é—î –≤—ñ–∫–Ω–æ –∫—ñ–Ω—Ü—è –≥—Ä–∏ –∑ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º –¥–ª—è –ø–µ—Ä–µ–º–æ–≥–∏ –∞–±–æ –ø–æ—Ä–∞–∑–∫–∏
     * –í—ñ–¥–æ–±—Ä–∞–∂–∞—î –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, –∫–Ω–æ–ø–∫–∏ —Ç–∞ –∑–∞–ø—É—Å–∫–∞—î –∑–≤—É–∫–∏
     */
    private void createEndGameContent() {
        boolean isVictory = (windowType == UIManager.WindowType.VICTORY);

        // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –≥—Ä–∞–¥—ñ—î–Ω—Ç–Ω–∏–π —Ñ–æ–Ω —è–∫ –≤ –º–µ–Ω—é
        if (isVictory) {
            Stop[] stops = {
                    new Stop(0, Color.web("#3C2F2F")),
                    new Stop(0.3, Color.web("#2A2525")),
                    new Stop(0.7, Color.web("#3C2F2F")),
                    new Stop(1, Color.web("#1E1A1A"))
            };
            LinearGradient gradient = new LinearGradient(0, 0, 0, 1, true, null, stops);
            root.setBackground(new Background(new BackgroundFill(gradient, null, null)));
        } else {
            // –î–ª—è –ø–æ—Ä–∞–∑–∫–∏ –∑–∞–ª–∏—à–∞—î–º–æ —Ç–µ–º–Ω–∏–π —Ñ–æ–Ω
            root.setBackground(new Background(new BackgroundFill(
                    Color.rgb(0, 0, 0, 0.9), CornerRadii.EMPTY, Insets.EMPTY)));
        }

        if (isVictory) {
            soundManager.playSound(SoundManager.SoundType.VICTORY_GAME);
            // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø–µ—Ä–µ–º–æ–≥–∏
            Label title = new Label("üéâ –ú–Ü–°–Ü–Ø –í–ò–ö–û–ù–ê–ù–ê! üéâ");
            title.setFont(FontManager.getInstance().getFont("Hardpixel", 32));
            title.setStyle("-fx-font-weight: bold;");
            title.setTextFill(Color.web("#EAD9C2"));

            // –î–æ–¥–∞—î–º–æ —Ç—ñ–Ω—å –¥–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞
            DropShadow titleShadow = new DropShadow();
            titleShadow.setColor(Color.web("#8B5A2B"));
            titleShadow.setOffsetX(3);
            titleShadow.setOffsetY(3);
            titleShadow.setRadius(8);
            title.setEffect(titleShadow);

            title.setLayoutX(70);
            title.setLayoutY(50);
            root.getChildren().add(title);

            // –ö–æ—Ç—è—á–∞ —ñ–∫–æ–Ω–∫–∞
            Label catIcon = new Label("üêæ");
            catIcon.setFont(FontManager.getInstance().getFont("Hardpixel", 60));
            catIcon.setTextFill(Color.web("#D4A76A"));
            catIcon.setLayoutX(200);
            catIcon.setLayoutY(110);
            root.getChildren().add(catIcon);

            // –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–µ—Ä–µ–º–æ–≥—É
            String message = config.optString("message", "–í—ñ–¥–º—ñ–Ω–Ω–∞ —Ä–æ–±–æ—Ç–∞! –í–∏ —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–µ—Ä—à–∏–ª–∏ –º—ñ—Å—ñ—é!");
            Label messageLabel = new Label(message);
            messageLabel.setFont(FontManager.getInstance().getFont("Hardpixel", 16));
            messageLabel.setTextFill(Color.web("#D4A76A"));
            messageLabel.setLayoutX(75);
            messageLabel.setLayoutY(200);
            messageLabel.setWrapText(true);
            messageLabel.setPrefWidth(300);
            messageLabel.setTextAlignment(TextAlignment.CENTER);
            messageLabel.setAlignment(Pos.CENTER);
            root.getChildren().add(messageLabel);

            // –ö–Ω–æ–ø–∫–∞ "–ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏" (–Ω–∞—Å—Ç—É–ø–Ω–∏–π —Ä—ñ–≤–µ–Ω—å)
            Button continueButton = createStyledButton("–ü–†–û–î–û–í–ñ–ò–¢–ò", Color.web("#4A7043"));
            continueButton.setLayoutX(115);
            continueButton.setLayoutY(260);
            continueButton.setOnAction(e -> {
                // –ü–µ—Ä–µ—Ö–æ–¥–∏–º–æ –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ —Ä—ñ–≤–Ω—è
                int currentLevel = GameManager.getInstance().getCurrentLevelId();
                int nextLevel = currentLevel + 1;

                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —ñ—Å–Ω—É—î –Ω–∞—Å—Ç—É–ø–Ω–∏–π —Ä—ñ–≤–µ–Ω—å (–º–∞–∫—Å–∏–º—É–º 3 —Ä—ñ–≤–Ω—ñ)
                if (nextLevel <= 3) {
                    closeWindow();
                    soundManager.stopSoundEffects();
                    GameManager.getInstance().addMoney(GameManager.getInstance().getTemporaryMoney());
                    GameManager.getInstance().saveProgress();
                    GameManager.getInstance().saveGame();
                    GameManager.getInstance().completeLevel(currentLevel);
                    GameManager.getInstance().loadLevel(nextLevel, true);
                } else {
                    GameManager.getInstance().completeLevel(currentLevel);
                    showAllLevelsCompleted();
                }
            });
            root.getChildren().add(continueButton);

            // –ö–Ω–æ–ø–∫–∞ "–í–∏–π—Ç–∏ –≤ –º–µ–Ω—é"
            Button menuButton = createStyledButton("–í –ú–ï–ù–Æ", Color.web("#7B3F3F"));
            menuButton.setLayoutX(115);
            menuButton.setLayoutY(320);
            menuButton.setOnAction(e -> {
                closeWindow();
                GameManager.getInstance().addMoney(GameManager.getInstance().getTemporaryMoney());
                GameManager.getInstance().saveProgress();
                GameManager.getInstance().saveGame();
                GameManager.getInstance().stopGameAndGoToMenu();
                UIManager.getInstance().hideMenuButton();
            });
            root.getChildren().add(menuButton);

        } else {
            soundManager.playSound(SoundManager.SoundType.FAIL_GAME);
            GameManager.getInstance().gameOver();
            // –ö–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –ø–æ—Ä–∞–∑–∫–∏
            Label title = new Label("üíÄ –ú–Ü–°–Ü–Ø –ü–†–û–í–ê–õ–ï–ù–ê üíÄ");
            title.setFont(FontManager.getInstance().getFont("Hardpixel", 28));
            title.setStyle("-fx-font-weight: bold;");
            title.setTextFill(Color.RED);
            title.setLayoutX(80);
            title.setLayoutY(60);
            root.getChildren().add(title);

            String message = config.optString("message", "–ù–µ –∑–∞—Å–º—É—á—É–π—Ç–µ—Å—å! –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑!");
            Label messageLabel = new Label(message);
            messageLabel.setFont(FontManager.getInstance().getFont("Hardpixel", 16));
            messageLabel.setTextFill(Color.WHITE);
            messageLabel.setLayoutX(75);
            messageLabel.setLayoutY(140);
            messageLabel.setWrapText(true);
            messageLabel.setPrefWidth(300);
            root.getChildren().add(messageLabel);

            // –ö–Ω–æ–ø–∫–∞ "–°–ø—Ä–æ–±—É–≤–∞—Ç–∏ –∑–Ω–æ–≤—É"
            Button retryButton = createStyledButton("–°–ü–†–û–ë–£–í–ê–¢–ò –ó–ù–û–í–£", Color.web("#4A7043"));
            retryButton.setLayoutX(115);
            retryButton.setLayoutY(210);
            retryButton.setOnAction(e -> {
                closeWindow();
                soundManager.stopSoundEffects();
                GameManager.getInstance().restartCurrentLevel();
            });
            root.getChildren().add(retryButton);

            // –ö–Ω–æ–ø–∫–∞ "–í–∏–π—Ç–∏ –≤ –º–µ–Ω—é"
            Button menuButton = createStyledButton("–í –ú–ï–ù–Æ", Color.web("#7B3F3F"));
            menuButton.setLayoutX(115);
            menuButton.setLayoutY(270);
            menuButton.setOnAction(e -> {
                closeWindow();
                GameManager.getInstance().saveProgress();
                GameManager.getInstance().saveGame();
                GameManager.getInstance().stopGameAndGoToMenu();
                UIManager.getInstance().hideMenuButton();

            });
            root.getChildren().add(menuButton);
        }
    }

    /**
     * –í—ñ–¥–æ–±—Ä–∞–∂–∞—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø—Ä–æ—Ö–æ–¥–∂–µ–Ω–Ω—è –≤—Å—ñ—Ö —Ä—ñ–≤–Ω—ñ–≤ —Ç–∞ –∫–Ω–æ–ø–∫—É –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –≤ –º–µ–Ω—é
     * –û—á–∏—â–∞—î –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π –∫–æ–Ω—Ç–µ–Ω—Ç —ñ –Ω–∞–ª–∞—à—Ç–æ–≤—É—î —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Ñ—ñ–Ω–∞–ª—å–Ω–æ–≥–æ –µ–∫—Ä–∞–Ω—É
     */
    private void showAllLevelsCompleted() {
        Label completedLabel = new Label("üèÜ –í–°–Ü –†–Ü–í–ù–Ü –ü–†–û–ô–î–ï–ù–û! üèÜ");
        completedLabel.setFont(FontManager.getInstance().getFont("Hardpixel", 24));
        completedLabel.setStyle("-fx-font-weight: bold;");
        completedLabel.setTextFill(Color.GOLD);
        completedLabel.setLayoutX(50);
        completedLabel.setLayoutY(100);

        Label congratsLabel = new Label("–í—ñ—Ç–∞—î–º–æ! –í–∏ –º–∞–π—Å—Ç–µ—Ä –∫–æ—Ç—è—á–æ–≥–æ –≥—Ä–∞–±–µ–∂—É!");
        congratsLabel.setFont(FontManager.getInstance().getFont("Hardpixel", 16));
        congratsLabel.setTextFill(Color.web("#D4A76A"));
        congratsLabel.setLayoutX(50);
        congratsLabel.setLayoutY(150);
        congratsLabel.setPrefWidth(300);
        congratsLabel.setWrapText(true);

        // –û—á–∏—â–∞—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π –∫–æ–Ω—Ç–µ–Ω—Ç
        root.getChildren().clear();

        // –î–æ–¥–∞—î–º–æ –Ω–æ–≤–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç
        root.getChildren().addAll(completedLabel, congratsLabel);

        // –ö–Ω–æ–ø–∫–∞ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –≤ –º–µ–Ω—é
        Button menuButton = createStyledButton("–ü–û–í–ï–†–ù–£–¢–ò–°–Ø –í –ú–ï–ù–Æ", Color.web("#4A7043"));
        menuButton.setLayoutX(90);
        menuButton.setLayoutY(250);
        menuButton.setOnAction(e -> {
            closeWindow();
            soundManager.stopSoundEffects();
            GameManager.getInstance().addMoney(GameManager.getInstance().getTemporaryMoney());
            GameManager.getInstance().saveProgress();
            GameManager.getInstance().saveGame();
            GameManager.getInstance().stopGameAndGoToMenu();
            UIManager.getInstance().hideMenuButton();


        });
        root.getChildren().add(menuButton);
    }

    /**
     * –ö–æ–Ω–≤–µ—Ä—Ç—É—î –∫–æ–ª—ñ—Ä —É —à—ñ—Å—Ç–Ω–∞–¥—Ü—è—Ç–∫–æ–≤–∏–π —Ä—è–¥–æ–∫ —É —Ñ–æ—Ä–º–∞—Ç—ñ #RRGGBB
     * @param color –ö–æ–ª—ñ—Ä –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—ó
     * @return –®—ñ—Å—Ç–Ω–∞–¥—Ü—è—Ç–∫–æ–≤–∏–π —Ä—è–¥–æ–∫ –∫–æ–ª—å–æ—Ä—É
     */
    private String toHexString(Color color) {
        return String.format("#%02X%02X%02X",
                (int) (color.getRed() * 255),
                (int) (color.getGreen() * 255),
                (int) (color.getBlue() * 255));
    }

    /**
     * –°—Ç–≤–æ—Ä—é—î —Å—Ç–∏–ª—ñ–∑–æ–≤–∞–Ω—É –∫–Ω–æ–ø–∫—É –∑ –∑–∞–¥–∞–Ω–∏–º —Ç–µ–∫—Å—Ç–æ–º —ñ –∫–æ–ª—å–æ—Ä–æ–º —Ä–∞–º–∫–∏
     * @param text  –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
     * @param color –ö–æ–ª—ñ—Ä —Ä–∞–º–∫–∏ —Ç–∞ —Ñ–æ–Ω—É –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–Ω—ñ
     * @return –°—Ç–∏–ª—ñ–∑–æ–≤–∞–Ω–∞ –∫–Ω–æ–ø–∫–∞ –∑ –µ—Ñ–µ–∫—Ç–∞–º–∏ –Ω–∞–≤–µ–¥–µ–Ω–Ω—è
     */
    private Button createStyledButton(String text, Color color) {
        Button button = new Button(text);
        button.setFont(FontManager.getInstance().getFont("Hardpixel", 16));
        button.setPrefSize(220, 40);

        String baseStyle = String.format(
                "-fx-background-color: #2A2525;" +
                        "-fx-text-fill: %s;" +
                        "-fx-border-color: %s;" +
                        "-fx-border-width: 2px;" +
                        "-fx-border-radius: 10px;" +
                        "-fx-background-radius: 10px;" +
                        "-fx-cursor: hand;" +
                        "-fx-font-family: 'Hardpixel';" +
                        "-fx-font-size: 16px;",
                toHexString(Color.web("#EAD9C2")), toHexString(color)
        );

        String hoverTextColor = color.equals(Color.web("#4A7043")) ? "#1E1A1A" : "#EAD9C2";
        String hoverStyle = String.format(
                "-fx-background-color: %s;" +
                        "-fx-text-fill: %s;" +
                        "-fx-border-color: #D4A76A;" +
                        "-fx-border-width: 3px;" +
                        "-fx-border-radius: 10px;" +
                        "-fx-background-radius: 10px;" +
                        "-fx-cursor: hand;" +
                        "-fx-font-family: 'Hardpixel';" +
                        "-fx-font-size: 16px;",
                toHexString(color), hoverTextColor
        );

        button.setStyle(baseStyle);

        // –î–æ–¥–∞—î–º–æ —Ç—ñ–Ω—å –¥–æ –∫–Ω–æ–ø–∫–∏
        DropShadow buttonShadow = new DropShadow();
        buttonShadow.setColor(Color.web("#8B5A2B"));
        buttonShadow.setOffsetX(2);
        buttonShadow.setOffsetY(2);
        buttonShadow.setRadius(5);
        button.setEffect(buttonShadow);

        button.setOnMouseEntered(e -> {
            button.setStyle(hoverStyle);
            DropShadow hoverShadow = new DropShadow();
            hoverShadow.setColor(Color.web("#D4A76A"));
            hoverShadow.setOffsetX(3);
            hoverShadow.setOffsetY(3);
            hoverShadow.setRadius(8);
            button.setEffect(hoverShadow);
        });

        button.setOnMouseExited(e -> {
            button.setStyle(baseStyle);
            button.setEffect(buttonShadow);
        });

        return button;
    }

    /**
     * –°—Ç–≤–æ—Ä—é—î –∫–Ω–æ–ø–∫—É –∑–∞–∫—Ä–∏—Ç—Ç—è –≤—ñ–∫–Ω–∞
     * –ö–Ω–æ–ø–∫–∞ –∑'—è–≤–ª—è—î—Ç—å—Å—è —É –≤–µ—Ä—Ö–Ω—å–æ–º—É –ø—Ä–∞–≤–æ–º—É –∫—É—Ç—ñ —Ç–∞ –∑–∞–∫—Ä–∏–≤–∞—î –≤—ñ–∫–Ω–æ –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ
     */
    private void createCloseButton() {
        Button closeButton = new Button("‚úñ");
        closeButton.setFont(FontManager.getInstance().getFont("Hardpixel", 14));
        closeButton.setStyle("-fx-background-color: #ff4444; -fx-text-fill: white; -fx-border-radius: 3; -fx-background-radius: 3;");

        if (windowType == UIManager.WindowType.COMPUTER) {
            return; // –î–ª—è –∫–æ–º–ø'—é—Ç–µ—Ä–∞ –∫–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä–∏—Ç—Ç—è –≤–∂–µ —Å—Ç–≤–æ—Ä–µ–Ω–∞
        }

        closeButton.setLayoutX(320); // Top-right corner
        closeButton.setLayoutY(10); // Moved to top
        closeButton.setPrefSize(60, 30);


        closeButton.setOnAction(e -> closeWindow());
        closeButton.setOnMouseEntered(e ->
                closeButton.setStyle("-fx-background-color: #ff6666; -fx-text-fill: white; -fx-border-radius: 3; -fx-background-radius: 3;"));
        closeButton.setOnMouseExited(e ->
                closeButton.setStyle("-fx-background-color: #ff4444; -fx-text-fill: white; -fx-border-radius: 3; -fx-background-radius: 3;"));

        root.getChildren().add(closeButton);
    }

    /**
     * –ü–æ–≤–µ—Ä—Ç–∞—î –∫–æ—Ä–µ–Ω–µ–≤–∏–π –≤—É–∑–æ–ª —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
     * @return –∫–æ—Ä–µ–Ω–µ–≤–∏–π –≤—É–∑–æ–ª (root) —Ç–∏–ø—É Node
     */
    public Node getUI() {
        return root;
    }

    /**
     * –ó–∞–∫—Ä–∏–≤–∞—î –ø–æ—Ç–æ—á–Ω–µ –≤—ñ–∫–Ω–æ UI, –ø—Ä–∏–±–∏—Ä–∞—é—á–∏ –π–æ–≥–æ –∑ –±–∞—Ç—å–∫—ñ–≤—Å—å–∫–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞,
     * —Ç–∞ –≤—ñ–¥–Ω–æ–≤–ª—é—î —Å—Ç–∞–Ω –≥—Ä–∏ –¥–æ PLAYING. –¢–∞–∫–æ–∂ –≤–∏–∫–ª–∏–∫–∞—î –º–µ—Ç–æ–¥ UIManager –¥–ª—è –ø—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è UI
     */
    private void closeWindow() {
        try {
            UIManager.getInstance().hideInteractiveObjectUI();
        } catch (Exception ex) {
            System.out.println("Error calling hideInteractiveObjectUI(): " + ex.getMessage());
        }

        if (root.getParent() instanceof Pane) {
            Pane parent = (Pane) root.getParent();
            parent.getChildren().remove(root);
            GameManager.getInstance().setGameState(GameManager.GameState.PLAYING);
        }
    }
}